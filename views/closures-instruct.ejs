<li>

// create a function that creates and returns a function. when that created function is called, it should print 'hello'
// var function1 = createFunction();
// now we are going to call the function we just created
// function1(); should console.log('hello');
function createFunction() {

}

// when you think you completed createFunction, comment out the following two commented lines below (to comment out the lines, remove the // in the beginning of each line). function1() should print out 'hello' in the console to the left

// var function1 = createFunction();
// function1();
</li>


<li>

// create a function that accepts one input and returns a function. when that created function is called, it should print out the input that was used when the function was created

// var printSample = createFunctionPrinter('sample');
// var printHello = createFunctionPrinter('hello')
// now we are going to call the function we just created
// printSample(); should console.log('sample');
// printHello(); should console.log('hello');
function createFunctionPrinter(input) {

}

// when you think you created the createFunctionPrinter, comment out the following two lines. printSample should print out 'sample'
// var printSample = createFunctionPrinter('sample');
// printSample();

// if you got the above functions to work, comment out the following two lines. printSample should print out 'hello'
// var printHello = createFunctionPrinter('hello');
// printHello();
</li>

<li>

// Examine the following code. Notice that we are returning a function and that function is using variables that are outside of its scope
function outer(){
  var counter = 0; // this variable is outside incrementCounter's scope
  function incrementCounter (){
    counter ++;
    console.log('counter', counter);
  }
  return incrementCounter;
}

var willCounter = outer();
var jasCounter = outer();

// uncomment each of these lines one by one. Before your do, guess what will be logged from each function call

// willCounter();
// willCounter();
// willCounter();

// jasCounter();
// willCounter();
</li>


<li>
// now we are going to create a function that returns a function that will add an input by x

// var addByTwo = addByX(2);
// addByTwo(1); -> should return 3
// addByTwo(2); -> should return 4
// addByTwo(3); -> should return 5

// var addByThree = addByX(3);
// addByThree(1); -> should return 4
// addByThree(2); -> should return 5

// var addByFour = addByX(4);
// addByFour(4); -> should return 8
// addByFour(5); -> should return 9
function addByX(x) {

}

var addByTwo = addByX(2);

// now call addByTwo with an input of 1




// now call addByTwo with an input of 2
</li>