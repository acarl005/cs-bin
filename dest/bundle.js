(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/home/andrew/Desktop/production/codesmith-bin/src/exec.js":[function(require,module,exports){
function render(e){e=String(e).replace(/Unexpected end of input/,"Unexpected end of input: make sure your brackets match"),$("#console #output").append("<p>"+e+"</p>");var o=document.getElementById("console");o.scrollTop=o.scrollHeight}function repl(e){e.preventDefault();var code=$(e.target).find("input").val();commandStack.unshift(code),commandStack=commandStack.slice(0,9),commandIndex=-1,wrapLogOutput(function(){$(e.target).find("input").val("");var evalErr,wrappedCode="try{ "+code+" } catch(err) { evalErr = err.stack }",output=eval(wrappedCode);if(evalErr){var errMessage=evalErr.match(/.*/)[0];render('<span class="error">'+errMessage+"</span>")}else render("=> "+output)})}function wrapLogOutput(e){console.nativeLog=console.log,console.log=function(){[].forEach.call(arguments,function(e){render(e)}),console.nativeLog.apply(console,arguments)},e(),console.log=console.nativeLog}module.exports=function(hasErrors){function execute(){$("#console #output").empty();var errors=hasErrors();if(errors[0])return render('<span class="error">'+errors[0].node.innerText+"</span>");var code=editor.getValue();wrapLogOutput(function(){eval(code),$("#console form").off("submit"),$("#console form").on("submit",eval("("+String(repl)+")"))})}$(document).ready(function(){$("#console form").on("submit",repl),$("#execute").on("click",execute),$(window).on("keypress",function(e){e.ctrlKey&&e.keyCode&&execute()}),$("#console form").on("keydown",function(e){if(38===e.keyCode)commandIndex++;else{if(40!==e.keyCode)return"we can ignore this";commandIndex--}commandIndex=Math.min(commandStack.length-1,commandIndex),commandIndex=Math.max(-1,commandIndex),$("#console form input").val(commandStack[commandIndex])})})};var commandStack=[],commandIndex=-1;

},{}],"/home/andrew/Desktop/production/codesmith-bin/src/repl.js":[function(require,module,exports){
function checkForErrors(){return errWidgets}function renderErr(r,e,t){var a=$('<div class="lint-error"><span class="lint-error-icon">!</span>'+e+"</div>")[0];errWidgets.push(editor.addLineWidget(r-1,a,{coverGutter:!1,noHScroll:!0}))}function updateErrors(){var code=editor.getValue();errWidgets.forEach(function(r){editor.removeLineWidget(r)}),errWidgets=[];try{var syntax=esprima.parse(code,{tolerant:!0,loc:!0}),evalErr,wrappedCode="try{ "+code+" } catch(err) { evalErr = err.stack }";if(eval(wrappedCode),evalErr){var errMessage=evalErr.match(/.*/)[0],_evalErr$match=evalErr.match(/<anonymous>:(\d+):(\d+)/),_evalErr$match2=_slicedToArray(_evalErr$match,3),__=_evalErr$match2[0],lineNum=_evalErr$match2[1],colNum=_evalErr$match2[2];renderErr(lineNum,errMessage,colNum)}}catch(err){renderErr(err.lineNumber,err.description,err.column)}}var _slicedToArray=function(){function r(r,e){var t=[],a=!0,o=!1,n=void 0;try{for(var i,c=r[Symbol.iterator]();!(a=(i=c.next()).done)&&(t.push(i.value),!e||t.length!==e);a=!0);}catch(d){o=!0,n=d}finally{try{!a&&c["return"]&&c["return"]()}finally{if(o)throw n}}return t}return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return r(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();window.onload=function(){window.editor=CodeMirror.fromTextArea(document.getElementById("code-editor"),{lineNumbers:!0,mode:"javascript",matchBrackets:!0,autoCloseBrackets:!0,keyMap:"sublime",tabSize:2,theme:"ttcn"});var r;editor.on("change",function(){clearTimeout(r),r=setTimeout(updateErrors,800)});var e=require("./save");e(editor)};var errWidgets=[],execute=require("./exec");execute(checkForErrors);

},{"./exec":"/home/andrew/Desktop/production/codesmith-bin/src/exec.js","./save":"/home/andrew/Desktop/production/codesmith-bin/src/save.js"}],"/home/andrew/Desktop/production/codesmith-bin/src/save.js":[function(require,module,exports){
module.exports=function(e){var o=window.location.pathname;$("#save").on("click",function(r){localStorage.setItem(o,e.getValue()),alert("Progress saved.")});var r=localStorage.getItem(o);r&&e.replaceRange(r,CodeMirror.Pos(e.firstLine()-1),CodeMirror.Pos(e.lastLine())),$("#clear").on("click",function(e){confirm("Are you sure? This will remove saved progress.")&&(localStorage.removeItem(o),window.location.reload())})};

},{}]},{},["/home/andrew/Desktop/production/codesmith-bin/src/repl.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
