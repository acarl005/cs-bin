(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/home/andy/Documents/production/cs-bin/src/editor.js":[function(require,module,exports){
function checkForErrors(){return errWidgets}function renderErr(e,r,o){if(!e)throw new Error("Line number for renderErr must be a valid integer.");var i=$('\n    <div class="lint-error">\n      <span class="lint-error-icon">!</span>\n      '+r+"\n    </div>\n  ")[0];errWidgets.push(editor.addLineWidget(e-1,i,{coverGutter:!1,noHScroll:!0}))}function updateErrors(){var e=editor.getValue();errWidgets.forEach(function(e){editor.removeLineWidget(e)}),errWidgets=[];try{esprima.parse(e,{tolerant:!1,loc:!0});webWorker.postMessage(e),ps=setTimeout(killWorker,TIMEOUT)}catch(r){renderErr(r.lineNumber||r.line,r.description||r.message,r.column)}}function killWorker(){webWorker.terminate(),renderErr(1,"The code is taking a while. You might have an infinite loop."),spawnWorker()}function spawnWorker(){window.webWorker=new Worker("worker.js"),webWorker.onmessage=function(e){e.data.message&&renderErr(e.data.lineNumber,e.data.message),clearTimeout(ps)}}var TIMEOUT=1200,ps;spawnWorker(),window.onload=function(){window.editor=CodeMirror.fromTextArea(document.getElementById("code-editor"),{lineNumbers:!0,mode:"javascript",matchBrackets:!0,autoCloseBrackets:!0,keyMap:"sublime",tabSize:2,theme:"dracula"});var e;editor.on("change",function(){clearTimeout(e),e=setTimeout(updateErrors,TIMEOUT)});var r=require("./save");r(editor)},require("./resize");var errWidgets=[];window.replaceEditorText=function(e){editor.replaceRange(e,CodeMirror.Pos(editor.firstLine()-1),CodeMirror.Pos(editor.lastLine()))};var execute=require("./exec");execute(checkForErrors);

},{"./exec":"/home/andy/Documents/production/cs-bin/src/exec.js","./resize":"/home/andy/Documents/production/cs-bin/src/resize.js","./save":"/home/andy/Documents/production/cs-bin/src/save.js"}],"/home/andy/Documents/production/cs-bin/src/exec.js":[function(require,module,exports){
function render(e){var o=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];e="object"==typeof e?JSON.stringify(e,null,4):String(e),e=e.replace(/Unexpected end of input/,"Unexpected end of input: probably an extra opening bracket or operator."),o.arrow&&(e="=> "+e),o.error&&(e='<span class="stderr">'+e+"</span>"),o.lineNum&&(e=e.replace(/!/,"line "+o.lineNum+" - ")),$("#console #output").append('<p><span class="stdout">'+e+"</span></p>");var n=document.getElementById("console");n.scrollTop=n.scrollHeight}function repl(e){e.preventDefault();var code=$(e.target).find("input").val();commandStack.unshift(code),commandStack=commandStack.slice(0,9),commandIndex=-1,wrapLogOutput(function(){if($(e.target).find("input").val(""),code.match(/var/))return render("do var declarations in the editor above",{error:!0});var evalErr,output,wrappedCode="try{ "+code+"\n } catch(err) { evalErr = err }";try{output=eval(wrappedCode)}catch(err){evalErr=err}evalErr?render(evalErr.message,{error:!0}):render(output,{arrow:!0})})}function wrapLogOutput(e){console.nativeLog=console.log,console.log=function(){[].forEach.call(arguments,function(e){render(e)}),console.nativeLog.apply(console,arguments)},e(),console.log=console.nativeLog}module.exports=function(hasErrors){function execute(){$("#console #output").empty();var errors=hasErrors(),error=errors[0];if(error)return alertify.error("Code has errors. Not executing."),render(error.node.innerText||$(error.node).text(),{error:!0,lineNum:editor.getLineNumber(error.line)+1});var code=editor.getValue();return alertify.success("Executing "+code.split("\n").length+" lines of javascript."),wrapLogOutput(function(){eval(code),console.log("\n"),$("#console form").off("submit"),$("#console form").on("submit",eval("("+String(repl)+")"))}),!0}$(document).ready(function(){$("#console form").on("submit",repl),$("#console").on("click",function(e){$("input").focus()}),$("#execute").on("click",execute),$(window).on("keydown",function(e){e.ctrlKey&&83===e.keyCode&&(e.preventDefault(),execute()&&showConsole())}),$("#console form").on("keydown",function(e){if(38===e.keyCode)commandIndex++;else{if(40!==e.keyCode)return"we can ignore this";commandIndex--}commandIndex=Math.min(commandStack.length-1,commandIndex),commandIndex=Math.max(-1,commandIndex),$("#console form input").val(commandStack[commandIndex])})})};var commandStack=[],commandIndex=-1;

},{}],"/home/andy/Documents/production/cs-bin/src/resize.js":[function(require,module,exports){
function pxToNum(e){return+e.slice(0,-2)}var saveHeights,editorHeight,consoleHeight,originalEditorHeight,originalConsoleHeight,startY=0,y=0,$editor,$console,$document=$(document);$document.ready(function(e){function o(e){if(y=e.pageY-startY,!(y+pxToNum(originalEditorHeight)>window.innerHeight-50)){var o=String(y)+"px",i="+-";"-"===o[0]&&(o=o.slice(1),i="-+"),$editor.css("height","calc("+originalEditorHeight+" "+i[0]+" "+o+")"),$console.css("height","calc("+originalConsoleHeight+" "+i[1]+" "+o+")")}}function i(){$document.off("mousemove",o),$document.off("mouseup",i),editor.refresh()}var t=$(".resize");$editor=$("#editor-wrap"),$console=$("#console"),originalEditorHeight=$editor.css("height"),originalConsoleHeight=$console.css("height"),t.on("mousedown",function(e){e.preventDefault(),startY=e.pageY-y,$document.on("mousemove",o),$document.on("mouseup",i)}),saveHeights=function(){editorHeight=$editor.css("height"),consoleHeight=$console.css("height")},saveHeights(),hideConsole(),$("#execute").on("click",showConsole),$("#close").on("click",hideConsole)}),window.hideConsole=function(){saveHeights(),$("#black-stuff").hide(),$("#editor-wrap").css("height","100vh");try{editor.refresh()}catch(e){}},window.showConsole=function(){"none"===$("#black-stuff").css("display")&&($("#black-stuff").show(),$("#console").css("height",consoleHeight),$("#editor-wrap").css("height",editorHeight),editor.refresh())};

},{}],"/home/andy/Documents/production/cs-bin/src/save.js":[function(require,module,exports){
module.exports=function(e){var r=window.location.pathname;$("#save").on("click",function(o){localStorage.setItem(r,e.getValue()),alertify.success("Progress saved.")});var o=localStorage.getItem(r);o&&replaceEditorText(o),$("#clear").on("click",function(e){var o="Are you sure? This will remove saved progress and restore the challenges to their former state.";alertify.confirm(o,function(e){e&&(localStorage.removeItem(r),replaceEditorText($("#code-editor").val()),alertify.error("Saved progress removed."))})})};

},{}]},{},["/home/andy/Documents/production/cs-bin/src/editor.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvaG9tZS9hbmR5L0RvY3VtZW50cy9wcm9kdWN0aW9uL2NzLWJpbi9zcmMvZWRpdG9yLmpzIiwiL2hvbWUvYW5keS9Eb2N1bWVudHMvcHJvZHVjdGlvbi9jcy1iaW4vc3JjL2V4ZWMuanMiLCIvaG9tZS9hbmR5L0RvY3VtZW50cy9wcm9kdWN0aW9uL2NzLWJpbi9zcmMvcmVzaXplLmpzIiwiL2hvbWUvYW5keS9Eb2N1bWVudHMvcHJvZHVjdGlvbi9jcy1iaW4vc3JjL3NhdmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxBQXFDQSxJQXJDSSxJQXFDSyxHQXJDRSxHQUFHLElBQUksQ0FBQyxPQXNDakIsTUFBTyxZQUlULFFBQVMsV0FBVSxFQUFTLEVBQU0sR0FDaEMsSUFBSyxFQUFTLEtBQU0sSUFBSSxPQUFNLHFEQUM5QixJQUFJLEdBQU0sRUFBQyx1RkFHTCxFQUFJLG9CQUVQLEVBQ0gsWUFBVyxLQUNULE9BQU8sY0FBYyxFQUFVLEVBQUcsR0FBTyxhQUFhLEVBQU8sV0FBVyxLQUs1RSxRQUFTLGdCQUNQLEdBQUksR0FBTyxPQUFPLFVBRWxCLFlBQVcsUUFBUSxTQUFBLEdBQ2pCLE9BQU8saUJBQWlCLEtBRTFCLGFBRUEsS0FFZSxRQUFRLE1BQU0sR0FBUSxVQUFVLEVBQU8sS0FBSyxHQUd6RCxXQUFVLFlBQVksR0FDdEIsR0FBSyxXQUFXLFdBQVksU0FHNUIsTUFBTyxHQUVQLFVBQ0UsRUFBSSxZQUFjLEVBQUksS0FDdEIsRUFBSSxhQUFlLEVBQUksUUFDdkIsRUFBSSxTQWNWLFFBQVMsY0FDUCxVQUFVLFlBQ1YsVUFBVSxFQUFHLGdFQUNiLGNBR0YsUUFBUyxlQUNQLE9BQU8sVUFBWSxHQUFJLFFBQU8sYUFDOUIsVUFBVSxVQUFZLFNBQUEsR0FDaEIsRUFBRSxLQUFLLFNBQ1QsVUFBVSxFQUFFLEtBQUssV0FBWSxFQUFFLEtBQUssU0FFdEMsYUFBYSxLQXhH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LENBQUMsQUdUQSxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FIVXZDLEFDSEUsQUNURixBQ0dBLEtGTUcsQ0FBQyxBQ1RBLEFDR0EsRUhTRSxDQUFDLEVBQUUsQUdUQSxDSFNDLEFDSEEsQ0FBQyxBQ1RBLEFDR0EsQ0ZNQyxFQUFFLEFDVEEsQ0RTQyxBQ1RBLENBQUMsRUZZRSxFQUFFLElDSEksQ0NUQyxDRFNDLEFDVEEsQ0FBQyxLRllELElDSEEsQ0FBQyxFQUFJO0FESTdCLEFDSEUsQUNUSixBQ0dFLFNESEssQ0RTQyxDQUFDLENBQUMsQUNUQSxDQUFDLENBQUMsRUZZRSxDQUFDLEVDSEUsRUVORSxDQUFDLENGTUMsQ0RHQyxBQ0hBLENER0MsQUNIQSxDREdDLENHVEMsQ0RIQyxBQ0dBLENESEMsQUNHQSxDREhDLEVEU0UsS0FBSyxFQUFFLEVBQUU7QURJckMsQUNISSxBQ1ROLEdDR0MsTUZNTSxDQUFDLEFDVEEsQ0ZZQyxFRVpFLENGWUMsQUVaQSxDQUFDLFNGWVMsQUNIQSxDREdDLEFFWkEsQ0RTQyxBQ1RBLENEU0MsQUNUQSxVRllVLEVBQUUsT0FBTyxDQUFDLENBQUM7QUNGeEMsQUNUTixHRllDLENBQUMsQ0FBQyxVQ0hVLEVBQUUsSUFBSSxDQ1RDLEdBQUcsT0RTTyxBQ1RBLENBQUMsQ0RTQyxDQUFDLENDVEMsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM3QyxBQ0dBLEdBQUMsQ0FBQyxHRk1HLEtFTkssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNREhNLENDR0MsRURIRSxBQ0dBLFFESFEsQ0FBQyxDQ0dULENBQUMsQ0RIVyxDQUFDLEFDR1IsUURIZ0IsQ0FBQyxDQUFDO0FDSTdDLEtGTUMsQ0FBQyxDQUFDLENFTkMsR0FBRyxHQUFHLGlHQUFpRyxDQUFDO0FIVTlHLEFFWkEsQUNHRSxNSFNFLEdFWkcsQ0ZZQyxBRVpBLEVBQUUsQUNHQSxDSFNDLEFFWkEsQUNHQSxPSFNPLEFHVEEsQ0hTQyxBR1RBLEdESEcsQUNHQSxFREhFLEFDR0EsR0hTRyxDQUFDLENBQUMsS0VaSSxBQ0dU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QyxFQUFFLDhEQUE4RCxDQUFDLENBQUM7QUFDN0UsQUNyQkYsSUFBSSxTRHFCUyxFQUFFLENBQUMsQUNyQkEsR0FBRyxFQUFFLENBQUM7QUFDdEIsQUNaQSxDRmlDQyxHQ3JCRyxFQ1pFLENBQUMsU0RZUyxFQ1pFLENEWUMsQ0FBQyxDQUFDLEFDWkEsQ0RZQyxXQ1pVO0FBQzlCLE1BQUksQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsS0FBSyxNQUFNLEVBQUUsT0FBTztBRmtDMUQsQUVqQ0UsR0FBQyxDQUFDLEtGaUNLLFNFakNTLENBQUMsQ0ZpQ0MsQUVqQ0EsR0ZpQ0csQ0VqQ0MsRUFBRSxDQUFDO0FGa0N6QixBQ3JCRixBQ1pFLEdBQUMsQ0FBQyxJRmlDSSxDQUFDLEFDckJBLEtDWkssQ0RZQyxBQ1pBLENEWUMsQUNaQSxFRmlDRSxDRWpDQyxDRFlDLEFDWkEsQ0ZpQ0MsQ0NyQmEsR0RxQlQsR0VqQ0csRUFBRSxDRmlDQyxDQUFDLFdBQVcsQUVqQ0EsQ0ZpQ0MsQUVqQ0EsQ0ZpQ0MsQUVqQ0E7QUZrQzNDLEFFakNBLEdBQUMsQ0FBQyxFRFdrQixLRHNCWCxDQUFDLENDdEJpQixLQ1hYLENBQUMsQ0FBQyxDRmlDQyxFRWpDRSxDRmlDQyxBRWpDQSxRQUFRLEVGaUNSLEFFakNVLENGaUNULEVBQUksU0VqQ2lCLENBQUMsQ0FBQyxzQkRXbEIsRUFBRTtBRHVCNUIsQUVqQ0YsUUZpQ00sQUVqQ0EsQ0ZpQ0MsQUVqQ0EsQ0ZpQ0MsSUFBSSxDQUFDLENFakNDLEVBQUUsQ0FBQyxHRmlDRyxFQUFFO0FBQ2xCLEFDdkJKLENDVkQsQ0FBQyxJRFVJLE9BQU8sRUR1QkUsQ0FBQyxDQUFDLEFDdkJBLENEdUJDLElBQUksQUN2QkEsQ0R1QkMsT0N2Qk8sRUFBRSxDRHVCQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7QUN0Qi9DLEtEdUJDLEdDdkJHLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxD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Q2pDLENBQUM7QUFDRixNQUFJLEVBQUUsQ0FBQztBQUNQLFNBQU8sQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztDQUNqQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgVElNRU9VVCA9IDEyMDA7XG52YXIgcHM7XG5zcGF3bldvcmtlcigpO1xuXG53aW5kb3cub25sb2FkID0gZnVuY3Rpb24oKSB7XG5cbiAgLy8gaW5pdGlhbGl6ZSB0aGUgZWRpdG9yXG4gIHdpbmRvdy5lZGl0b3IgPSBDb2RlTWlycm9yLmZyb21UZXh0QXJlYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvZGUtZWRpdG9yXCIpLCB7XG4gICAgbGluZU51bWJlcnM6IHRydWUsXG4gICAgbW9kZTogXCJqYXZhc2NyaXB0XCIsXG4gICAgbWF0Y2hCcmFja2V0czogdHJ1ZSxcbiAgICBhdXRvQ2xvc2VCcmFja2V0czogdHJ1ZSxcbiAgICBrZXlNYXA6ICdzdWJsaW1lJyxcbiAgICB0YWJTaXplOiAyLFxuICAgIHRoZW1lOiAnZHJhY3VsYSdcbiAgfSk7XG5cbiAgLy8gY2hlY2tzIGZvciBlcnJvcnMgaWYgdGhlIGVkaXRvciBjaGFuZ2VzLiB3YWl0cyBUSU1FT1VUIG1zIGFmdGVyIHRoZXkgZmluaXNoIHR5cGluZ1xuICB2YXIgd2FpdGluZztcbiAgZWRpdG9yLm9uKFwiY2hhbmdlXCIsICgpID0+IHtcbiAgICBjbGVhclRpbWVvdXQod2FpdGluZyk7XG4gICAgd2FpdGluZyA9IHNldFRpbWVvdXQodXBkYXRlRXJyb3JzLCBUSU1FT1VUKTtcbiAgfSk7XG5cbiAgLy8gYWRkcyB0aGUgc2F2ZSBmZWF0dXJlXG4gIHZhciBzYXZlID0gcmVxdWlyZSgnLi9zYXZlJyk7XG4gIHNhdmUoZWRpdG9yKTtcblxufTtcblxuLy8gYWRkcyByZXNpemluZyBmZWF0dXJlXG5yZXF1aXJlKCcuL3Jlc2l6ZScpO1xuXG5cbi8vIHRoaXMgd2lsbCBob2xkIHRoZSBlcnJvciBvYmplY3RzLCBpZiBhbnlcbnZhciBlcnJXaWRnZXRzID0gW107XG5cbmZ1bmN0aW9uIGNoZWNrRm9yRXJyb3JzKCkge1xuICByZXR1cm4gZXJyV2lkZ2V0cztcbn1cblxuLy8gZGlzcGxheSB0aGUgZXJyb3IgbWVzc2FnZSBpbiB0aGUgZWRpdG9yXG5mdW5jdGlvbiByZW5kZXJFcnIobGluZU51bSwgZGVzYywgY29sTnVtKSB7XG4gIGlmICghbGluZU51bSkgdGhyb3cgbmV3IEVycm9yKCdMaW5lIG51bWJlciBmb3IgcmVuZGVyRXJyIG11c3QgYmUgYSB2YWxpZCBpbnRlZ2VyLicpO1xuICB2YXIgbXNnID0gJChgXG4gICAgPGRpdiBjbGFzcz1cImxpbnQtZXJyb3JcIj5cbiAgICAgIDxzcGFuIGNsYXNzPVwibGludC1lcnJvci1pY29uXCI+ITwvc3Bhbj5cbiAgICAgICR7ZGVzY31cbiAgICA8L2Rpdj5cbiAgYClbMF07XG4gIGVycldpZGdldHMucHVzaChcbiAgICBlZGl0b3IuYWRkTGluZVdpZGdldChsaW5lTnVtIC0gMSwgbXNnLCB7IGNvdmVyR3V0dGVyOiBmYWxzZSwgbm9IU2Nyb2xsOiB0cnVlIH0pXG4gICk7XG59XG5cbi8vIGRvIGFub3RoZXIgY2hlY2sgZm9yIGVycm9yc1xuZnVuY3Rpb24gdXBkYXRlRXJyb3JzKCkge1xuICB2YXIgY29kZSA9IGVkaXRvci5nZXRWYWx1ZSgpO1xuXG4gIGVycldpZGdldHMuZm9yRWFjaChlcnIgPT4ge1xuICAgIGVkaXRvci5yZW1vdmVMaW5lV2lkZ2V0KGVycik7XG4gIH0pO1xuICBlcnJXaWRnZXRzID0gW107XG5cbiAgdHJ5IHtcbiAgICAvLyBsZXQgZXNwcmltYSBjaGVjayBmb3Igc3ludGF4IGVycm9yc1xuICAgIHZhciBzeW50YXggPSBlc3ByaW1hLnBhcnNlKGNvZGUsIHsgdG9sZXJhbnQ6IGZhbHNlLCBsb2M6IHRydWUgfSk7XG5cbiAgICAvL3NlbmQgY29kZSB0byB0aGUgd2ViIHdvcmtlciB0byBleGVjdXRlIGFuZCBjaGVjayBmb3IgZXJyb3JzXG4gICAgd2ViV29ya2VyLnBvc3RNZXNzYWdlKGNvZGUpO1xuICAgIHBzID0gc2V0VGltZW91dChraWxsV29ya2VyLCBUSU1FT1VUKTtcblxuXG4gIH0gY2F0Y2ggKGVycikge1xuXG4gICAgcmVuZGVyRXJyKFxuICAgICAgZXJyLmxpbmVOdW1iZXIgfHwgZXJyLmxpbmUsXG4gICAgICBlcnIuZGVzY3JpcHRpb24gfHwgZXJyLm1lc3NhZ2UsXG4gICAgICBlcnIuY29sdW1uXG4gICAgKTtcbiAgfVxuXG59XG5cbndpbmRvdy5yZXBsYWNlRWRpdG9yVGV4dCA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgZWRpdG9yLnJlcGxhY2VSYW5nZShcbiAgICB0ZXh0LFxuICAgIENvZGVNaXJyb3IuUG9zKGVkaXRvci5maXJzdExpbmUoKS0xKSxcbiAgICBDb2RlTWlycm9yLlBvcyhlZGl0b3IubGFzdExpbmUoKSlcbiAgKTtcbn07XG5cbmZ1bmN0aW9uIGtpbGxXb3JrZXIoKSB7XG4gIHdlYldvcmtlci50ZXJtaW5hdGUoKTtcbiAgcmVuZGVyRXJyKDEsICdUaGUgY29kZSBpcyB0YWtpbmcgYSB3aGlsZS4gWW91IG1pZ2h0IGhhdmUgYW4gaW5maW5pdGUgbG9vcC4nKTtcbiAgc3Bhd25Xb3JrZXIoKTtcbn1cblxuZnVuY3Rpb24gc3Bhd25Xb3JrZXIoKSB7XG4gIHdpbmRvdy53ZWJXb3JrZXIgPSBuZXcgV29ya2VyKCd3b3JrZXIuanMnKTtcbiAgd2ViV29ya2VyLm9ubWVzc2FnZSA9IGUgPT4ge1xuICAgIGlmIChlLmRhdGEubWVzc2FnZSkge1xuICAgICAgcmVuZGVyRXJyKGUuZGF0YS5saW5lTnVtYmVyLCBlLmRhdGEubWVzc2FnZSk7XG4gICAgfVxuICAgIGNsZWFyVGltZW91dChwcyk7XG4gIH07XG59XG5cbnZhciBleGVjdXRlID0gcmVxdWlyZSgnLi9leGVjJyk7XG5leGVjdXRlKGNoZWNrRm9yRXJyb3JzKTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaGFzRXJyb3JzKSB7XG5cbiAgJChkb2N1bWVudCkucmVhZHkoKCkgPT4ge1xuXG4gICAgLy8gcG93ZXJzIHRoZSBSRVBMXG4gICAgJCgnI2NvbnNvbGUgZm9ybScpLm9uKCdzdWJtaXQnLCByZXBsKTtcblxuICAgIC8vIHBsYWNlcyBjdXJzb3IgaW4gdGhlIHByb21wdCBpZiB0aGV5IGNsaWNrIGFueXdoZXJlIGluIHRoZSBjb25zb2xlXG4gICAgJCgnI2NvbnNvbGUnKS5vbignY2xpY2snLCBlID0+IHtcbiAgICAgICQoJ2lucHV0JykuZm9jdXMoKTtcbiAgICB9KTtcblxuICAgIC8vcnVucyB0aGUgY29kZSBmcm9tIHRoZSBlZGl0b3IgaWYgdGhlIGJ1dHRvbiBpcyBjbGlja2VkXG4gICAgJCgnI2V4ZWN1dGUnKS5vbignY2xpY2snLCBleGVjdXRlKTtcblxuICAgIC8vcnVucyB0aGUgY29kZSBmcm9tIHRoZSBlZGl0b3IgaWYgY3RybCtzIGlzIHByZXNzZWRcbiAgICAkKHdpbmRvdykub24oJ2tleWRvd24nLCBlID0+IHtcbiAgICAgIGlmIChlLmN0cmxLZXkgJiYgZS5rZXlDb2RlID09PSA4Mykge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGV4ZWN1dGUoKSAmJiBzaG93Q29uc29sZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gZW5hYmxlIGNvbW1hbmQgaGlzdG9yeSBmb3IgdGhlIFJFUExcbiAgICAkKCcjY29uc29sZSBmb3JtJykub24oJ2tleWRvd24nLCBlID0+IHtcbiAgICAgIGlmIChlLmtleUNvZGUgPT09IDM4KSB7ICAvL3VwIGFycm93IGtleVxuICAgICAgICBjb21tYW5kSW5kZXgrKztcbiAgICAgIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09PSA0MCkgeyAgLy9kb3duIGFycm93IGtleVxuICAgICAgICBjb21tYW5kSW5kZXgtLTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAnd2UgY2FuIGlnbm9yZSB0aGlzJztcbiAgICAgIH1cbiAgICAgIC8vIG1ha2Ugc3VyZSBjb21tYW5kSW5kZXggc3RheXMgd2l0aGluIHJhbmdlIHJhbmdlXG4gICAgICBjb21tYW5kSW5kZXggPSBNYXRoLm1pbihjb21tYW5kU3RhY2subGVuZ3RoIC0gMSwgY29tbWFuZEluZGV4KTtcbiAgICAgIGNvbW1hbmRJbmRleCA9IE1hdGgubWF4KC0xLCBjb21tYW5kSW5kZXgpO1xuICAgICAgJCgnI2NvbnNvbGUgZm9ybSBpbnB1dCcpLnZhbChjb21tYW5kU3RhY2tbY29tbWFuZEluZGV4XSk7XG4gICAgfSk7XG5cbiAgfSk7XG5cbiAgZnVuY3Rpb24gZXhlY3V0ZSgpIHtcbiAgICAkKCcjY29uc29sZSAjb3V0cHV0JykuZW1wdHkoKTtcbiAgICB2YXIgZXJyb3JzID0gaGFzRXJyb3JzKCk7XG4gICAgdmFyIGVycm9yID0gZXJyb3JzWzBdO1xuICAgIGlmIChlcnJvcil7XG4gICAgICBhbGVydGlmeS5lcnJvcignQ29kZSBoYXMgZXJyb3JzLiBOb3QgZXhlY3V0aW5nLicpO1xuICAgICAgcmV0dXJuIHJlbmRlcihcbiAgICAgICAgZXJyb3Iubm9kZS5pbm5lclRleHQgfHwgJChlcnJvci5ub2RlKS50ZXh0KCksICAgIC8vIGNocm9tZSB8fCBmaXJlZm94XG4gICAgICAgIHtcbiAgICAgICAgICBlcnJvcjogdHJ1ZSxcbiAgICAgICAgICBsaW5lTnVtOiBlZGl0b3IuZ2V0TGluZU51bWJlcihlcnJvci5saW5lKSArIDFcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICB2YXIgY29kZSA9IGVkaXRvci5nZXRWYWx1ZSgpO1xuXG4gICAgYWxlcnRpZnkuc3VjY2VzcyhgRXhlY3V0aW5nICR7Y29kZS5zcGxpdCgnXFxuJykubGVuZ3RofSBsaW5lcyBvZiBqYXZhc2NyaXB0LmApO1xuXG4gICAgd3JhcExvZ091dHB1dCgoKSA9PiB7XG5cbiAgICAgIGV2YWwoY29kZSk7XG4gICAgICBjb25zb2xlLmxvZygnXFxuJyk7XG5cbiAgICAgICQoJyNjb25zb2xlIGZvcm0nKS5vZmYoJ3N1Ym1pdCcpO1xuICAgICAgJCgnI2NvbnNvbGUgZm9ybScpLm9uKCdzdWJtaXQnLCBldmFsKCcoJytTdHJpbmcocmVwbCkrJyknKSk7XG4gICAgICAvLyB0aGlzIGV2YWwvU3RyaW5nIHRoaW5nIGlzIHByZXR0eSB3ZWlyZCByaWdodD8gSXQncyBiYXNpY2FsbHkgYSBoYWNrIHRoYXQgUm9iIGFuZCBJIGRldmlzZWQgdG8gXCJjbG9uZVwiIGEgZnVuY3Rpb24uIEl0IHRha2VzIGEgZnVuYywgY29udmVydHMgdG8gYSBzdHJpbmcsIHRoZW4gcmVkZWZpbmVzIGl0IGluIGFuIGV2YWwuIFRoaXMgZWZmZWN0aXZlbHkgYWNoaWV2ZXMgZHluYW1pYyBzY29waW5nLiBCeSByZWRlZmluaW5nIGl0IGluIHRoaXMgc2NvcGUsIEkgY2FuIGFjY2VzcyB0aGUgbG9jYWwgdmFyaWFibGVzIGhlcmUgaW5zdGVhZCBvZiB0aGUgZGVmYXVsdCBsZXhpY2FsIHNjb3BpbmcgYmVoYXZpb3IuIFRoZSByZWFzb24gSSB3YW50IHRoaXMgaXMgc28gdGhlIHJlcGwgaGFzIGFjY2VzcyB0byB0aGUgdmFyaWFibGVzIGRlZmluZWQgaW4gdGhlIENvZGVNaXJyb3IgZWRpdG9yLlxuXG4gICAgfSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG5cbi8vIGFsbG93IHVzZXIgdG8gYWNjZXNzIHByZXZpb3VzbHkgZW50ZXJlZCBjb21tYW5kc1xudmFyIGNvbW1hbmRTdGFjayA9IFtdO1xudmFyIGNvbW1hbmRJbmRleCA9IC0xO1xuXG4vLyBwbGFjZSB0ZXh0IGluIHRoZSBjb25zb2xlXG5mdW5jdGlvbiByZW5kZXIodGV4dCwgb3B0aW9ucz17fSkge1xuICBpZiAodHlwZW9mIHRleHQgPT09ICdvYmplY3QnKSB7XG4gICAgdGV4dCA9IEpTT04uc3RyaW5naWZ5KHRleHQsIG51bGwsIDQpO1xuICB9IGVsc2Uge1xuICAgIHRleHQgPSBTdHJpbmcodGV4dCk7XG4gIH1cblxuICAvLyBUaGlzIHBhcnRpY3VsYXIgZXJyIG1lc3NhZ2UgaXMgcG9vci4gTWFrZSBpdCBhIGJpdCBtb3JlIGhlbHBmdWxcbiAgdGV4dCA9IHRleHQucmVwbGFjZShcbiAgICAvVW5leHBlY3RlZCBlbmQgb2YgaW5wdXQvLFxuICAgICdVbmV4cGVjdGVkIGVuZCBvZiBpbnB1dDogcHJvYmFibHkgYW4gZXh0cmEgb3BlbmluZyBicmFja2V0IG9yIG9wZXJhdG9yLidcbiAgKTtcblxuICBpZiAob3B0aW9ucy5hcnJvdylcbiAgICB0ZXh0ID0gYD0+ICR7dGV4dH1gO1xuICBpZiAob3B0aW9ucy5lcnJvcilcbiAgICB0ZXh0ID0gYDxzcGFuIGNsYXNzPVwic3RkZXJyXCI+JHt0ZXh0fTwvc3Bhbj5gO1xuICBpZiAob3B0aW9ucy5saW5lTnVtKVxuICAgIHRleHQgPSB0ZXh0LnJlcGxhY2UoLyEvLCBgbGluZSAke29wdGlvbnMubGluZU51bX0gLSBgKTtcbiAgJCgnI2NvbnNvbGUgI291dHB1dCcpLmFwcGVuZChgPHA+PHNwYW4gY2xhc3M9XCJzdGRvdXRcIj4ke3RleHR9PC9zcGFuPjwvcD5gKTtcblxuICAvLyBzY3JvbGwgdG8gYm90dG9tIGluIG9yZGVyIHRvIHNob3cgbW9zdCByZWNlbnRcbiAgdmFyIGNvbnNvbGVET00gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29uc29sZScpO1xuICBjb25zb2xlRE9NLnNjcm9sbFRvcCA9IGNvbnNvbGVET00uc2Nyb2xsSGVpZ2h0O1xufVxuXG4vLyBydW4gdGhlIFJFUEwgY29tbWFuZFxuZnVuY3Rpb24gcmVwbChlKSB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgdmFyIGNvZGUgPSAkKGUudGFyZ2V0KS5maW5kKCdpbnB1dCcpLnZhbCgpO1xuICBjb21tYW5kU3RhY2sudW5zaGlmdChjb2RlKTtcbiAgY29tbWFuZFN0YWNrID0gY29tbWFuZFN0YWNrLnNsaWNlKDAsIDkpOyAvLyBvbmx5IHJlbWVtYmVyIHRoZSBsYXN0IDEwIGNvbW1hbmRzXG4gIGNvbW1hbmRJbmRleCA9IC0xO1xuICB3cmFwTG9nT3V0cHV0KCgpID0+IHtcbiAgICAkKGUudGFyZ2V0KS5maW5kKCdpbnB1dCcpLnZhbCgnJyk7XG5cbiAgICAvL3ZhciBkZWNsYXJhdGlvbnMgZG9uJ3Qgd29yayBpbiB0aGUgUkVQTCwgc28gZ2l2ZSB0aGVtIGFuIGVycm9yXG4gICAgaWYgKGNvZGUubWF0Y2goL3Zhci8pKSByZXR1cm4gcmVuZGVyKCdkbyB2YXIgZGVjbGFyYXRpb25zIGluIHRoZSBlZGl0b3IgYWJvdmUnLCB7IGVycm9yOiB0cnVlIH0pO1xuXG4gICAgdmFyIGV2YWxFcnIsIG91dHB1dDtcbiAgICB2YXIgd3JhcHBlZENvZGUgPSBgdHJ5eyAke2NvZGV9XFxuIH0gY2F0Y2goZXJyKSB7IGV2YWxFcnIgPSBlcnIgfWA7XG4gICAgdHJ5IHtcbiAgICAgIG91dHB1dCA9IGV2YWwod3JhcHBlZENvZGUpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgZXZhbEVyciA9IGVycjtcbiAgICB9XG4gICAgaWYgKGV2YWxFcnIpIHtcbiAgICAgIHJlbmRlcihldmFsRXJyLm1lc3NhZ2UsIHsgZXJyb3I6IHRydWUgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbmRlcihvdXRwdXQsIHsgYXJyb3c6IHRydWUgfSk7XG4gICAgfVxuICB9KTtcbn1cblxuLy8gZXhlY3V0ZXMgYSBmdW5jdGlvbiBpbiBhIGNvbnRleHQgd2hlcmUgYWxsIGNhbGxzIHRvIGNvbnNvbGUubG9nIHdpbGwgcmVuZGVyIHRvIHRoZSBET01cbmZ1bmN0aW9uIHdyYXBMb2dPdXRwdXQoZnVuYykge1xuICBjb25zb2xlLm5hdGl2ZUxvZyA9IGNvbnNvbGUubG9nO1xuICBjb25zb2xlLmxvZyA9IGZ1bmN0aW9uKCkge1xuICAgIFtdLmZvckVhY2guY2FsbChhcmd1bWVudHMsIGxpbmUgPT4ge1xuICAgICAgcmVuZGVyKGxpbmUpO1xuICAgIH0pO1xuICAgIGNvbnNvbGUubmF0aXZlTG9nKC4uLmFyZ3VtZW50cyk7XG4gIH07XG4gIGZ1bmMoKTtcbiAgY29uc29sZS5sb2cgPSBjb25zb2xlLm5hdGl2ZUxvZztcbn1cbiIsInZhciBzYXZlSGVpZ2h0cywgZWRpdG9ySGVpZ2h0LCBjb25zb2xlSGVpZ2h0LFxuICAgIG9yaWdpbmFsRWRpdG9ySGVpZ2h0LCBvcmlnaW5hbENvbnNvbGVIZWlnaHQsXG4gICAgc3RhcnRZID0gMCwgeSA9IDAsICRlZGl0b3IsICRjb25zb2xlO1xudmFyICRkb2N1bWVudCA9ICQoZG9jdW1lbnQpO1xuXG4kZG9jdW1lbnQucmVhZHkoZSA9PiB7XG5cbiAgdmFyICRyZXNpemUgPSAkKCcucmVzaXplJyk7XG4gICRlZGl0b3IgPSAkKCcjZWRpdG9yLXdyYXAnKTtcbiAgJGNvbnNvbGUgPSAkKCcjY29uc29sZScpO1xuICBvcmlnaW5hbEVkaXRvckhlaWdodCA9ICRlZGl0b3IuY3NzKCdoZWlnaHQnKTtcbiAgb3JpZ2luYWxDb25zb2xlSGVpZ2h0ID0gJGNvbnNvbGUuY3NzKCdoZWlnaHQnKTtcblxuICAkcmVzaXplLm9uKCdtb3VzZWRvd24nLCBmdW5jdGlvbihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgc3RhcnRZID0gZXZlbnQucGFnZVkgLSB5O1xuICAgICRkb2N1bWVudC5vbignbW91c2Vtb3ZlJywgbW91c2Vtb3ZlKTtcbiAgICAkZG9jdW1lbnQub24oJ21vdXNldXAnLCBtb3VzZXVwKTtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gbW91c2Vtb3ZlKGV2ZW50KSB7XG4gICAgeSA9IGV2ZW50LnBhZ2VZIC0gc3RhcnRZO1xuICAgIGlmICh5ICsgcHhUb051bShvcmlnaW5hbEVkaXRvckhlaWdodCkgPiB3aW5kb3cuaW5uZXJIZWlnaHQgLSA1MCkgcmV0dXJuO1xuICAgIHZhciB5X3N0ciA9IFN0cmluZyh5KSArICdweCc7XG4gICAgdmFyIG9wZXIgPSAnKy0nO1xuICAgIGlmICh5X3N0clswXSA9PT0gJy0nKSB7XG4gICAgICB5X3N0ciA9IHlfc3RyLnNsaWNlKDEpO1xuICAgICAgb3BlciA9ICctKyc7XG4gICAgfVxuICAgICRlZGl0b3IuY3NzKCdoZWlnaHQnLCBgY2FsYygke29yaWdpbmFsRWRpdG9ySGVpZ2h0fSAke29wZXJbMF19ICR7eV9zdHJ9KWApO1xuICAgICRjb25zb2xlLmNzcygnaGVpZ2h0JywgYGNhbGMoJHtvcmlnaW5hbENvbnNvbGVIZWlnaHR9ICR7b3BlclsxXX0gJHt5X3N0cn0pYCk7XG4gIH1cblxuICBmdW5jdGlvbiBtb3VzZXVwKCkge1xuICAgICRkb2N1bWVudC5vZmYoJ21vdXNlbW92ZScsIG1vdXNlbW92ZSk7XG4gICAgJGRvY3VtZW50Lm9mZignbW91c2V1cCcsIG1vdXNldXApO1xuICAgIGVkaXRvci5yZWZyZXNoKCk7XG4gIH1cblxuICBzYXZlSGVpZ2h0cyA9IGZ1bmN0aW9uKCkge1xuICAgIGVkaXRvckhlaWdodCA9ICRlZGl0b3IuY3NzKCdoZWlnaHQnKTtcbiAgICBjb25zb2xlSGVpZ2h0ID0gJGNvbnNvbGUuY3NzKCdoZWlnaHQnKTtcbiAgfTtcbiAgc2F2ZUhlaWdodHMoKTtcblxuICBoaWRlQ29uc29sZSgpO1xuICAkKCcjZXhlY3V0ZScpLm9uKCdjbGljaycsIHNob3dDb25zb2xlKTtcbiAgJCgnI2Nsb3NlJykub24oJ2NsaWNrJywgaGlkZUNvbnNvbGUpO1xuXG59KTtcblxuZnVuY3Rpb24gcHhUb051bShzdHIpIHtcbiAgcmV0dXJuICtzdHIuc2xpY2UoMCwgLTIpO1xufVxuXG53aW5kb3cuaGlkZUNvbnNvbGUgPSBmdW5jdGlvbigpIHtcbiAgc2F2ZUhlaWdodHMoKTtcbiAgJCgnI2JsYWNrLXN0dWZmJykuaGlkZSgpO1xuICAkKCcjZWRpdG9yLXdyYXAnKS5jc3MoJ2hlaWdodCcsICcxMDB2aCcpO1xuICAvL2NvbnNvbGUgaGlkZXMgb24gbG9hZCwgYW5kIHNvbWV0aW1lcyB0aGUgZWRpdG9yIGlzbid0IGRlZmluZWQgeWV0LiB0aGlzIHByZXZlbnRzIFwidW5kZWZpbmVkIGlzIG5vdCBhIGZ1bmNcIiBlcnJvcnNcbiAgdHJ5IHsgZWRpdG9yLnJlZnJlc2goKTsgfSBjYXRjaChlcnIpIHt9XG59O1xuXG53aW5kb3cuc2hvd0NvbnNvbGUgPSBmdW5jdGlvbigpIHtcbiAgaWYgKCQoJyNibGFjay1zdHVmZicpLmNzcygnZGlzcGxheScpICE9PSAnbm9uZScpIHJldHVybjtcbiAgJCgnI2JsYWNrLXN0dWZmJykuc2hvdygpO1xuICAkKCcjY29uc29sZScpLmNzcygnaGVpZ2h0JywgY29uc29sZUhlaWdodCk7XG4gICQoJyNlZGl0b3Itd3JhcCcpLmNzcygnaGVpZ2h0JywgZWRpdG9ySGVpZ2h0KTtcbiAgZWRpdG9yLnJlZnJlc2goKTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGVkaXRvcikge1xuXG4gIHZhciBwYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lO1xuXG4gICQoJyNzYXZlJykub24oJ2NsaWNrJywgZSA9PiB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0ocGF0aCwgZWRpdG9yLmdldFZhbHVlKCkpO1xuICAgIGFsZXJ0aWZ5LnN1Y2Nlc3MoJ1Byb2dyZXNzIHNhdmVkLicpO1xuICB9KTtcblxuICB2YXIgc2F2ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShwYXRoKTtcbiAgaWYgKHNhdmVkKSB7XG4gICAgcmVwbGFjZUVkaXRvclRleHQoc2F2ZWQpO1xuICB9XG5cbiAgJCgnI2NsZWFyJykub24oJ2NsaWNrJywgZSA9PiB7XG4gICAgdmFyIG1zZyA9ICdBcmUgeW91IHN1cmU/IFRoaXMgd2lsbCByZW1vdmUgc2F2ZWQgcHJvZ3Jlc3MgYW5kIHJlc3RvcmUgdGhlIGNoYWxsZW5nZXMgdG8gdGhlaXIgZm9ybWVyIHN0YXRlLic7XG4gICAgYWxlcnRpZnkuY29uZmlybShtc2csIHRoZXlTYWlkWWVzID0+IHtcbiAgICAgIGlmICh0aGV5U2FpZFllcykge1xuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShwYXRoKTtcbiAgICAgICAgcmVwbGFjZUVkaXRvclRleHQoJCgnI2NvZGUtZWRpdG9yJykudmFsKCkpO1xuICAgICAgICBhbGVydGlmeS5lcnJvcignU2F2ZWQgcHJvZ3Jlc3MgcmVtb3ZlZC4nKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG5cbn07XG4iXX0=
