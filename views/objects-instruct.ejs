<li>
// Challenge 1


create a function that accepts two inputs (name and age) and returns an object. Let's call this function Person.


function Person(name, age) {

  // create an empty object

  // add a name property to the prevously created object

  // add an age property to the previously created object

  // add a speak property to the previously created object

  // return the object

}

var john = Person('John', 26);

//UNCOMMENT THESE TO TEST YOUR WORK!

//console.log(john.name); // -> Logs 'John'

//console.log(john.age); // -> Logs 26

//john.speak(); // -> Logs "Hi, my name is John"

</li>


<li>
// Challenge 2

// Inside function store, create a property with the key "greet" and the value is a function that logs "Hi"
var functionStore = {
  // put code in here

};
</li>


<li>
// Challenge 3

// create a function that creates objects using the Object.create method on the object
function Person_using_functionStore(name, age) {
  // put code in here

}


//--------------------------------------------------

// LETS TEST YOUR FUNCTION OUT
var john = Person_using_functionStore('John', 26);

// uncomment the following lines after finishing your Person class (function)
//console.log(john.name); // -> Logs 'John'
//console.log(john.age); //-> Logs 26
//john.greet(); //-> Logs "Hi"


//--------------------------------------------------

</li>


<li>
// Challenge 4


// Add a speak method to the functionStore that logs the name of the person
// Hint: keyword 'this'

//UNCOMMENT THESE TO TEST YOUR WORK!

// john.speak(); // Logs "John"

//--------------------------------------------------


</li>


<li>
// Extension: Challenge 5

// How can we modify the previous function so that we do not need to explicity write out the Object.create method

// Hint the 'new' keyword


//--------------------------------------------------


</li>